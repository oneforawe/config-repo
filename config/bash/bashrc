#!/usr/bin/env bash
# filename: bashrc   (linked from ~/.bashrc)
# purpose: Set interactive shell configs.


# Notes:
# 1. This config file is executed automatically by bash for non-login
#    interactive shells but not (automatically) for login interactive shells.
# 2. In `.bash_profile` (for login-shells), this file is sourced *if* the shell
#    is interactive.
# 3. So this config file is thereby executed for all interactive shells.
# 4. This config file is also (strangely) called for non-interactive remote
#    shells (see reference [1]), so we have to prevent execution for this
#    non-interactive remote-shell case.

# Look into this:
# ~/.bashrc: executed by bash(1) for non-login shells.
# See /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples.  So maybe I should just say:
# 1. This config file is auto-executed by bash for all non-login shells. (?)


# FIRST:
# For remote shells (associated with rsh, ssh, or rcp, scp, sftp, etc) that are
# non-interactive, this file must do nothing, or at least not output anything.
# If running non-interactively, then return.
if [[ $- != *i* ]] ; then return ; fi

# For all other (interactive) shells, source/execute the following config files:

# For bash (not zsh)
if [[ -n $BASH_VERSION ]] ; then
    source ~/.config/bash/bashrc_opt
    source ~/.config/bash/bashrc_prompt
fi

source ~/.config/bash/bashrc_aliases

# Default type of ls command(s)
LS_TYPE="GNU"
source ~/.config/bash/bashrc_aliases_lsGNU
#LS_TYPE="BSD"
#source ~/.config/bash/bashrc_aliases_lsBSD

# For GNU/Linux
if [[ `uname -s` = "Linux" ]] ; then
    source ~/.config/bash/bashrc_aliases_linux
    #source ~/.config/bash/bashrc_etc_linux
fi

# For MacOS
if [[ `uname -s` = "Darwin" ]] ; then
    source ~/.config/bash/bashrc_aliases_mac
    source ~/.config/bash/bashrc_etc_mac
fi

source ~/.config/bash/bashrc_etc

# References:
# [1] https://unix.stackexchange.com/questions/257571/why-does-bashrc-check-
#     whether-the-current-shell-is-interactive