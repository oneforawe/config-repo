#!/usr/bin/env bash
# filename: bashrc_prompt   (linked from ~/.bashrc_prompt)
# purpose: Define the interactive-shell prompts (primary and peripheral).

# This file is sourced from ~/.bashrc (which is for interactive shells).


# PREP WORK
# ----------------------------

# Colors for the prompt (using ANSI escape sequences)
RED='\e[1;31m'  # red   bold   (1)
grn='\e[0;32m'  # green normal (0)
BLUE='\e[1;34m' # blue  bold   (1)
RC='\e[0m' # Reset Color (no color)
DATE=$(date +'%Y %b %d %a %H:%M:%S') # format: '2020 Jan 01 Wed 23:59:59'

# Set SSH indicator (if variable string not empty, then remotely logged in)
if [[ -n $SSH_CLIENT ]] ; then IN_SSH=" ${BLUE}[ssh]${RC}" ; else IN_SSH='' ; fi

# Get the IP address
THEIP=$(ifconfig | grep broadcast | awk '{print $2}')
if [[ -z $THEIP ]] ; then THEIP='IP_MISSING' ; fi


# THE PROMPT VARIABLES
# ----------------------------

# See `man bash` for more info on these variables (PS0, PS1, PROMPT_COMMAND).

# Set the prompt
if [[ $(id -u) = 0 ]] ; then
  # root/super user (red - as warning/notice)
  PS1="\n┌[${red}\u${RC}@\H] [$THEIP]${IN_SSH} [${DATE}]: ${grn}\w${RC} \n└> "
else
  # normal user (green)
  PS1="\n┌[${grn}\u@\H${RC}] [$THEIP]${IN_SSH} [${DATE}]: ${grn}\w${RC} \n└> "
fi

# Just before the prompt.
# Determine the window title (a kind of peripheral prompt):
PROMPT_COMMAND='echo -ne "\e]0;${TERM_PROGRAM} - %m > ${PWD##*/}\a"'
# Bash executes PROMPT_COMMAND prior to issuing each primary prompt PS1.
#    (See .zshrc_prompt)
#    terminal_name="${TERM_PROGRAM%.*}"
#    # Getting rid of "Apple_" pre-fix from "Apple_Terminal":
#    terminal_name="${terminal_name#*_}"
#    window_title="${terminal_name} - %m : ${PWD##*/}"
#    print -Pn "\e]0;${window_title}\a"

# Change the window title of X terminals
case $TERM in
  xterm*|rxvt*|Eterm|aterm|kterm|gnome)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
    source ~/.bash_login
    ;;
  screen)
    PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
    ;;
esac


# Just after the prompt.
PS0="\n"
# Bash displays/executes PS0 after it reads a command but before executing it.
