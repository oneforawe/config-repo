#!/usr/bin/env bash
# filename: zshrc_opt   (linked from ~/.config/zsh/zshrc_opt)
# purpose: For setting shell options.

# This file is sourced from ~/.zshrc (which is for interactive shells).


# Language option, set in case default doesn't already match this, which seems
# to usually be the case. Without this, the prompt character /u2514 generates an
# error: `zsh: character not in range`.
export LANG=en_US.UTF-8


# Set the `nullglob` option so list pattern-matching is silent for null matches
setopt nullglob


# vi edit-mode
# Use vi key-bindings (instead of default emacs bindings).
bindkey -v

# Specific custom keybindings placed in `.inputrc`, but apparently I need to
# put them here too.


# Custom Key Bindings
# See documentation for readline; see `bind --help`, `man bind`, `man bindkey`.
# See `man zshzle` for more info on bindkey.
# Execute `bind -p` or `bindkey -L` to see vi functions and/or bindings.
# See also, eg, https://hea-www.harvard.edu/~fine/Tech/vi.html

# vi mode has two sub-modes (according to readline documentation):
# 1. "vi-insert" and 2. "vi", "vi-command", "vi-move" (all equivalent).
# Re zshzle, there are several modes, but I'll stick with viins, vicmd.

# I don't know how to simultaneously assign key bindings to two keymaps
# (viins and vicmd), so I'm forced to write each key binding twice.

# allow ctrl-l to shift current active prompt to top of screen
bindkey -M viins '^k' clear-screen
bindkey -M vicmd '^k' clear-screen

# allow ctrl-p, ctrl-n for navigate history
bindkey -M viins '^p' up-history
bindkey -M vicmd '^p' up-history
bindkey -M viins '^n' down-history
bindkey -M vicmd '^n' down-history

# ctrl-r starts searching history backward
bindkey -M viins '^r' history-incremental-search-backward
bindkey -M vicmd '^r' history-incremental-search-backward

# allow backspace (not ctrl-?), etc for deletion
bindkey -M viins '^x' delete-char
bindkey -M vicmd '^x' delete-char
bindkey -M viins '^?' backward-delete-char
bindkey -M vicmd '^?' backward-delete-char
bindkey -M viins '^h' backward-delete-char
bindkey -M vicmd '^h' backward-delete-char
bindkey -M viins '^b' backward-kill-word
bindkey -M vicmd '^b' backward-kill-word
# Insert mode, traditionally, allows insertion and not deletion of previously-
# present text; modifying "\C-?" and "\C-h" "fixes" that "problem" of not being
# able to delete old characters when inserting text (so the mode is no longer
# really an "insert"-only mode).

# for movement and "arrow-completion" (for auto-suggestions)
bindkey -M viins '^a' beginning-of-line
bindkey -M vicmd '^a' beginning-of-line
bindkey -M viins '^e' end-of-line
bindkey -M vicmd '^e' end-of-line
bindkey -M viins '^l' vi-forward-char
bindkey -M vicmd '^l' vi-forward-char
# `vi-forward-char` is equivalent to what one might call "right-arrow"

# for switching to a text editor
zle -N edit-command-line
bindkey -M viins '^x^e' edit-command-line
bindkey -M vicmd '^x^e' edit-command-line